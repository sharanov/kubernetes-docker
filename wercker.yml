box: nginx

# Install dependencies
install:
    
  steps:
      
    - script:
        name: update sources
        code: |
          apt-get update
          apt-get install -y wget xz-utils
          
    - script:
        name: install nodejs
        code: |
          wget https://nodejs.org/dist/v6.9.2/node-v6.9.2-linux-x64.tar.xz
          ls -l
          tar -Jxf node-v6.9.2-linux-x64.tar.xz
          cp -r node-v6.9.2-linux-x64/{bin,include,lib,share} /usr/
          rm -fR node-v6.9.2-linux-x64.tar.xz node-v6.9.2-linux-x64
          npm install npm -g
          node -v
          npm -v
          
    - script:
        name: npm install
        code: |
          npm install --quiet

    - script:
        name: clean up build packages
        code: |
          rm -fR  node_modules/ aot/ build/
          
# Prepare the image and push it to GCR
push-image:
    
  steps:
    
    # Build image and push it to GCR
    - internal/docker-push:
        registry: $GCE_REGISTRY
        repository: $GCE_REPOSITORY/kubernetes-test-sharanov
        tag: $WERCKER_GIT_BRANCH-$WERCKER_GIT_COMMIT
        author: Hauskontor
        username: _json_key
        password: $GCR_JSON_KEY_FILE
        ports: "3000"
        working-dir: $WERCKER_SOURCE_DIR
        entrypoint: nginx -g "daemon off;" -c /pipeline/source/etc/nginx.conf


deploy-beta:
    
  steps:
    # Do templating of k8s yaml file to work with new image
    - bash-template
          
    - script:
        name: Move Kubernetes files in the convenient location
        code: |
          ls -la
          mkdir $WERCKER_OUTPUT_DIR/k8s
          mv k8s-*.yaml $WERCKER_OUTPUT_DIR/k8s
    # Deploy by applying new Deployment
    - kubectl:
        command: apply -f $WERCKER_OUTPUT_DIR/k8s/
        server: $K8S_MASTER
        username: $K8S_USERNAME
        password: $K8S_PASSWORD
        insecure-skip-tls-verify: true

    # Check the status. Visible only from the logs! Doesn't interrupt the pipeline
    - kubectl:
        command: rollout status deployment/kubernetes-test-sharanov
        server: $K8S_MASTER
        username: $K8S_USERNAME
        password: $K8S_PASSWORD
        insecure-skip-tls-verify: true

  # after-steps:
  #   - wercker/slack-notifier:
  #       url: $SLACK_WEBHOOK_URL
  #       channel: wercker